<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"\@微软雅黑";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;}
h1
	{mso-style-link:"标题 1 Char";
	margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:200%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:22.0pt;
	font-family:Consolas;}
h2
	{mso-style-link:"标题 2 Char";
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:172%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:16.0pt;
	font-family:Consolas;}
h3
	{mso-style-link:"标题 3 Char";
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:36.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:172%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:14.0pt;
	font-family:Consolas;}
h4
	{mso-style-link:"标题 4 Char";
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:157%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;}
h5
	{mso-style-link:"标题 5 Char";
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:157%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:14.0pt;
	font-family:Consolas;}
h6
	{mso-style-link:"标题 6 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:57.6pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-57.6pt;
	line-height:133%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:"等线 Light";}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-link:"标题 7 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:64.8pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-64.8pt;
	line-height:133%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;
	font-weight:bold;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"标题 8 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:72.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-72.0pt;
	line-height:133%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:"等线 Light";}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-link:"标题 9 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:79.2pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-79.2pt;
	line-height:133%;
	page-break-after:avoid;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:"等线 Light";}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:12.0pt;
	font-family:Consolas;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"页眉 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:10.0pt;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:Consolas;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"页脚 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:Consolas;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"标题 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:21.0pt;
	text-align:center;
	text-indent:0cm;
	layout-grid-mode:char;
	background:#323E4F;
	border:none;
	padding:0cm;
	font-size:36.0pt;
	font-family:Consolas;
	color:white;
	font-weight:bold;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"副标题 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:130%;
	layout-grid-mode:char;
	font-size:18.0pt;
	font-family:Consolas;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"批注框文本 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:Consolas;}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:10.5pt;
	font-family:Consolas;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"等线 Light";
	color:#2F5496;}
span.1Char
	{mso-style-name:"标题 1 Char";
	mso-style-link:"标题 1";
	font-family:Consolas;
	font-weight:bold;}
span.2Char
	{mso-style-name:"标题 2 Char";
	mso-style-link:"标题 2";
	font-family:Consolas;
	font-weight:bold;}
span.3Char
	{mso-style-name:"标题 3 Char";
	mso-style-link:"标题 3";
	font-family:Consolas;
	font-weight:bold;}
span.4Char
	{mso-style-name:"标题 4 Char";
	mso-style-link:"标题 4";
	font-family:Consolas;
	font-weight:bold;}
span.5Char
	{mso-style-name:"标题 5 Char";
	mso-style-link:"标题 5";
	font-family:Consolas;
	font-weight:bold;}
span.6Char
	{mso-style-name:"标题 6 Char";
	mso-style-link:"标题 6";
	font-family:"等线 Light";
	font-weight:bold;}
span.7Char
	{mso-style-name:"标题 7 Char";
	mso-style-link:"标题 7";
	font-weight:bold;}
span.8Char
	{mso-style-name:"标题 8 Char";
	mso-style-link:"标题 8";
	font-family:"等线 Light";}
span.9Char
	{mso-style-name:"标题 9 Char";
	mso-style-link:"标题 9";
	font-family:"等线 Light";}
p.a, li.a, div.a
	{mso-style-name:代码;
	mso-style-link:"代码 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#D9D9D9;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
p.a0, li.a0, div.a0
	{mso-style-name:代码突出;
	mso-style-link:"代码突出 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#ACB9CA;
	border:none;
	padding:0cm;
	font-size:12.5pt;
	font-family:Consolas;}
span.a1
	{mso-style-name:"代码 字符";
	mso-style-link:代码;
	font-family:Consolas;
	background:#D9D9D9;}
p.a2, li.a2, div.a2
	{mso-style-name:代码标题;
	mso-style-link:"代码标题 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#323E4F;
	border:none;
	padding:0cm;
	font-size:16.0pt;
	font-family:Consolas;
	color:white;
	font-weight:bold;}
span.a3
	{mso-style-name:"代码突出 字符";
	mso-style-link:代码突出;
	font-family:Consolas;
	background:#ACB9CA;}
p.1, li.1, div.1
	{mso-style-name:样式1;
	mso-style-link:"样式1 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:12.0pt;
	layout-grid-mode:char;
	background:#D9D9D9;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.a4
	{mso-style-name:"代码标题 字符";
	mso-style-link:代码标题;
	font-family:Consolas;
	color:white;
	background:#323E4F;
	font-weight:bold;}
p.a5, li.a5, div.a5
	{mso-style-name:图片灰;
	mso-style-link:"图片灰 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:gray;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.10
	{mso-style-name:"样式1 字符";
	mso-style-link:样式1;
	font-family:Consolas;
	background:#D9D9D9;}
p.a6, li.a6, div.a6
	{mso-style-name:图片白;
	mso-style-link:"图片白 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:white;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.a7
	{mso-style-name:"图片灰 字符";
	mso-style-link:图片灰;
	font-family:Consolas;
	background:gray;}
span.a8
	{mso-style-name:"图片白 字符";
	mso-style-link:图片白;
	font-family:Consolas;
	background:white;}
span.Char
	{mso-style-name:"页眉 Char";
	mso-style-link:页眉;
	font-family:Consolas;}
span.Char0
	{mso-style-name:"页脚 Char";
	mso-style-link:页脚;
	font-family:Consolas;}
span.Char1
	{mso-style-name:"标题 Char";
	mso-style-link:标题;
	font-family:Consolas;
	color:white;
	background:#323E4F;
	font-weight:bold;}
span.Char2
	{mso-style-name:"副标题 Char";
	mso-style-link:副标题;
	font-family:Consolas;
	font-weight:bold;}
p.a9, li.a9, div.a9
	{mso-style-name:代码淡化;
	mso-style-link:"代码淡化 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#D9D9D9;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;
	color:#A6A6A6;}
span.aa
	{mso-style-name:"代码淡化 字符";
	mso-style-link:代码淡化;
	font-family:Consolas;
	color:#A6A6A6;
	background:#D9D9D9;}
p.2, li.2, div.2
	{mso-style-name:样式2;
	mso-style-link:"样式2 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:white;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.20
	{mso-style-name:"样式2 字符";
	mso-style-link:样式2;
	font-family:Consolas;
	background:white;}
p.21, li.21, div.21
	{mso-style-name:代码突出2;
	mso-style-link:"代码突出2 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#ACB9CA;
	border:none;
	padding:0cm;
	font-size:12.5pt;
	font-family:Consolas;}
p.ab, li.ab, div.ab
	{mso-style-name:代码荧光笔;
	mso-style-link:"代码荧光笔 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#D9D9D9;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.22
	{mso-style-name:"代码突出2 字符";
	mso-style-link:代码突出2;
	font-family:Consolas;
	background:#FFFF66;}
span.ac
	{mso-style-name:"代码荧光笔 字符";
	mso-style-link:代码荧光笔;
	font-family:Consolas;
	background:#D9D9D9;}
p.ad, li.ad, div.ad
	{mso-style-name:代码荧光;
	mso-style-link:"代码荧光 字符";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	layout-grid-mode:char;
	background:#D9D9D9;
	border:none;
	padding:0cm;
	font-size:12.0pt;
	font-family:Consolas;}
span.ae
	{mso-style-name:"代码荧光 字符";
	mso-style-link:代码荧光;
	font-family:Consolas;
	background:#D9D9D9;}
span.Char3
	{mso-style-name:"批注框文本 Char";
	mso-style-link:批注框文本;
	font-family:Consolas;}
.MsoChpDefault
	{font-family:等线;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link="#0563C1" vlink="#954F72" style='text-justify-trim:punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<div style='border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 12.0pt 0cm;
background:white'>

<p class=2 align=right style='text-align:right;background:white'><span
lang=EN-US><img width=106 height=36 id="图片 1"
src="webserver02.files/image001.jpg"></span></p>

</div>

<h1 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>代码实现</span><span lang=EN-US>V2.0 -- </span><span
style='font-family:"微软雅黑",sans-serif'>代码重构</span></h1>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US><img width=341
height=384 id="图片 2" src="webserver02.files/image002.png"></span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>创建</span><span lang=EN-US>HttpRequest</span><span
style='font-family:"微软雅黑",sans-serif'>类</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-family:"微软雅黑",sans-serif'>封装请求信息的，优化</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法。</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>1.1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>声明请求参数</span></h3>

<h3 style='text-indent:0cm'><span lang=EN-US>1.1.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>在构造函数中初始化参数</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.http;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.BufferedReader;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.IOException;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.InputStream;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.InputStreamReader;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来封装请求信息</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.1.1 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>声明请求参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.1.2 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>在构造函数中初始化参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.1.3 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>改造</span><span lang=EN-US
style='color:#3F5FBF'>run</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>方法</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> HttpRequest {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //1,</span><span style='font-family:
"微软雅黑",sans-serif'>声明请求参数，设置</span><span lang=EN-US>getter setter</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; // </span><span style='font-family:
"微软雅黑",sans-serif'>请求方式</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
String <span style='color:#0000C0'>method</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; // </span><span style='font-family:
"微软雅黑",sans-serif'>请求资源的路径</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
String <span style='color:#0000C0'>uri</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; // </span><span style='font-family:
"微软雅黑",sans-serif'>请求遵循的协议名版本号</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
String <span style='color:#0000C0'>protocol</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //2,</span><span style='font-family:
"微软雅黑",sans-serif'>在构造函数中初始化参数</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
HttpRequest(InputStream <span style='color:#6A3E3E'>in</span>){</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>try</span></b> {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>获取输入流的信息</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedReader
<span style='color:#6A3E3E'>reader</span> = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>new</span></b> BufferedReader(</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>new</span></b> InputStreamReader(<span style='color:#6A3E3E'>in</span>));</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>读取请求行</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //GET
/test.html HTTP/1.1</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
<span style='color:#6A3E3E'>line</span> = <span style='color:#6A3E3E'>reader</span>.readLine();</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>防止尝试连接的空指针异常</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(line != null &amp;&amp; line.length() &gt; 0) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>用空格切割字符串返回数组</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
[GET,/test.html,HTTP/1.1]</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String[]
datas = line.split(&quot; &quot;);</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>给成员变量赋值</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; method
= datas[0];</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uri
= datas[1];</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>设置默认主页</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(uri.equals(&quot;/&quot;)) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uri
= &quot;/index.html&quot;;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protocol
= datas[2];</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
<b><span style='color:#7F0055'>catch</span></b> (IOException <span
style='color:#6A3E3E'>e</span>) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>e</span>.printStackTrace();</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //getters setters</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
String getMethod() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>method</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setMethod(String <span
style='color:#6A3E3E'>method</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>method</span>
= <span style='color:#6A3E3E'>method</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
String getUri() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>uri</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setUri(String <span
style='color:#6A3E3E'>uri</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>uri</span> = <span
style='color:#6A3E3E'>uri</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
String getProtocol() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>protocol</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setProtocol(String <span
style='color:#6A3E3E'>protocol</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>protocol</span>
= <span style='color:#6A3E3E'>protocol</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>1.1.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US>package cn.tedu.core;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import java.io.BufferedInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.BufferedReader;</span></p>

<p class=a><span lang=EN-US>import java.io.File;</span></p>

<p class=a><span lang=EN-US>import java.io.FileInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.IOException;</span></p>

<p class=a><span lang=EN-US>import java.io.InputStreamReader;</span></p>

<p class=a><span lang=EN-US>import java.io.PrintStream;</span></p>

<p class=a><span lang=EN-US>import java.net.Socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.http.HttpRequest;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>/**</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>这个类用来作为线程类，抽取</span><span
lang=EN-US>start</span><span style='font-family:"微软雅黑",sans-serif'>方法的代码</span><span
lang=EN-US> 4.2.1 </span><span style='font-family:"微软雅黑",sans-serif'>声明</span><span
lang=EN-US>Socket</span><span style='font-family:"微软雅黑",sans-serif'>对象</span><span
lang=EN-US> 4.2.2 </span><span style='font-family:"微软雅黑",sans-serif'>在构造函数中传入</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span><span
lang=EN-US> 4.2.3</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>重写</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;*/</span></p>

<p class=a><span lang=EN-US>public class ClientHandler implements Runnable {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 1,</span><span style='font-family:
"微软雅黑",sans-serif'>声明</span><span lang=EN-US>Socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; private Socket socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 2,</span><span style='font-family:
"微软雅黑",sans-serif'>在构造函数中传入</span><span lang=EN-US>socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public ClientHandler(Socket socket) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.socket =
socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 3,</span><span style='font-family:
"微软雅黑",sans-serif'>重写</span><span lang=EN-US>run</span><span style='font-family:
"微软雅黑",sans-serif'>方法，抽取</span><span lang=EN-US>start</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; @Override</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public void run() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
------</span><span style='font-family:"微软雅黑",sans-serif'>获取请求行的数据</span><span
lang=EN-US>------</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpRequest
request = new HttpRequest(socket.getInputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>浏览器和服务器尝试连接时会产生</span><span
lang=EN-US>uri</span><span style='font-family:"微软雅黑",sans-serif'>为空的现象</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(request.getUri() != null &amp;&amp; request.getUri().length() &gt; 0) {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
-------</span><span style='font-family:"微软雅黑",sans-serif'>抽取响应代码</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintStream
ps = new PrintStream(socket.getOutputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>拼接状态行</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;HTTP/1.1
200 OK&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>拼接响应头，响应类型：网页</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Type:text/html&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>拼接响应头，响应数据的长度</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
String data = &quot;hello server~&quot;;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
ps.println(&quot;Content-Length:&quot;+data.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
a,,,,,,,,</span><span style='font-family:"微软雅黑",sans-serif'>响应网页文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
File file = new File(&quot;WebContent/index.html&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
file = new File(&quot;WebContent&quot; + </span><span class=a3><span
lang=EN-US style='font-size:12.5pt'>request.getUri()</span></span><span
lang=EN-US>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Length:&quot;
+ file.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>空白行</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println();</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>真要显示的数据</span><span
lang=EN-US>,</span><span style='font-family:"微软雅黑",sans-serif'>显示网页文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>读取文件，读到数组里</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedInputStream
bis = new BufferedInputStream(new FileInputStream(file));</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[]
b = new byte[(int) file.length()];</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bis.read(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>写出去</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.write(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
ps.write(data.getBytes());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.flush();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.close();</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IOException e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>创建</span><span lang=EN-US>HttpResponse</span><span
style='font-family:"微软雅黑",sans-serif'>类</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-family:"微软雅黑",sans-serif'>封装响应信息，优化</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>1.2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>封装</span><span
lang=EN-US>4</span><span style='font-family:"微软雅黑",sans-serif'>个响应参数</span><span
lang=EN-US> setter getter</span></h3>

<h3 style='text-indent:0cm'><span lang=EN-US>1.2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>封装</span><span
lang=EN-US>OutputStream</span><span style='font-family:"微软雅黑",sans-serif'>属性。</span><span
lang=EN-US>Setter getter</span></h3>

<h3 style='text-indent:0cm'><span lang=EN-US>1.2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>getOutputStream</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.http;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.OutputStream;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来封装响应信息</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.2.1 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>封装</span><span lang=EN-US
style='color:#3F5FBF'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>个响应参数</span><span lang=EN-US style='color:#3F5FBF'> setter
getter</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.2.2 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>封装</span><span lang=EN-US
style='color:#3F5FBF'>OutputStream</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>属性。</span><span lang=EN-US style='color:#3F5FBF'>Setter getter</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.2.3 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>改造</span><span lang=EN-US
style='color:#3F5FBF'>getOutputStream</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>方法</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1.2.4 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>改造</span><span lang=EN-US
style='color:#3F5FBF'>run</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>方法</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> HttpResponse {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //1,</span><span style='font-family:
"微软雅黑",sans-serif'>封装</span><span lang=EN-US>4</span><span style='font-family:
"微软雅黑",sans-serif'>个响应参数</span><span lang=EN-US> setter getter</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>响应遵循的协议名版本号</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
String <span style='color:#0000C0'>protocol</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>状态码</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
<b><span style='color:#7F0055'>int</span></b> <span style='color:#0000C0'>status</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>响应的类型</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
String <span style='color:#0000C0'>contentType</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>响应数据的长度</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
<b><span style='color:#7F0055'>int</span></b> <span style='color:#0000C0'>contentLength</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //2,</span><span style='font-family:
"微软雅黑",sans-serif'>封装</span><span lang=EN-US>OutputStream</span><span
style='font-family:"微软雅黑",sans-serif'>属性</span><span lang=EN-US> Setter getter</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
OutputStream <span style='color:#0000C0'>out</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
HttpResponse(</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputStream
<span style='color:#6A3E3E'>out</span>){</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>out</span>=<span
style='color:#6A3E3E'>out</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><b><span lang=EN-US style='color:#7F0055'>&nbsp;&nbsp; </span></b><span
lang=EN-US>//3,</span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>getOut</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>保证响应头只被发送一次</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; private boolean isSend;//</span><span
style='font-family:"微软雅黑",sans-serif'>默认</span><span lang=EN-US>false</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; public OutputStream getOut() {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(!isSend){//</span><span
style='font-family:"微软雅黑",sans-serif'>如果没有被发送过就发一次</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>抽取响应头代码</span><span lang=EN-US>...</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintStream
ps = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new
PrintStream(out);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>状态行</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(protocol+&quot;
&quot;+status+&quot; OK&quot;);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>响应头</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Type:&quot;+contentType);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Length:&quot;+contentLength);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>空白行</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println();</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isSend=true;//</span><span
style='font-family:"微软雅黑",sans-serif'>改变状态</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a0><b><span lang=EN-US style='color:#7F0055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b></p>

<p class=a0><b><span lang=EN-US style='color:#7F0055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b></p>

<p class=a0><b><span lang=EN-US style='color:#7F0055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return
out;</span></b></p>

<p class=a0><b><span lang=EN-US style='color:#7F0055'>&nbsp;&nbsp; }</span></b></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setOut(OutputStream <span
style='color:#6A3E3E'>out</span>) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>out</span> = <span
style='color:#6A3E3E'>out</span>;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//setter
getter</span></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
String getProtocol() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>protocol</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setProtocol(String <span
style='color:#6A3E3E'>protocol</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>protocol</span>
= <span style='color:#6A3E3E'>protocol</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>int</span></b> getStatus() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>status</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setStatus(<b><span
style='color:#7F0055'>int</span></b> <span style='color:#6A3E3E'>status</span>)
{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>status</span>
= <span style='color:#6A3E3E'>status</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
String getContentType() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>contentType</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setContentType(String <span
style='color:#6A3E3E'>contentType</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>contentType</span>
= <span style='color:#6A3E3E'>contentType</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>int</span></b> getContentLength() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>return</span></b> <span style='color:#0000C0'>contentLength</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> setContentLength(<b><span
style='color:#7F0055'>int</span></b> <span style='color:#6A3E3E'>contentLength</span>)
{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>contentLength</span>
= <span style='color:#6A3E3E'>contentLength</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>1.2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.core;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.BufferedInputStream;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.File;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.FileInputStream;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.io.IOException;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.net.Socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> cn.tedu.http.HttpRequest;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> cn.tedu.http.HttpResponse;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来作为线程类，抽取</span><span
lang=EN-US style='color:#3F5FBF'>start</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>方法的代码</span><span lang=EN-US style='color:#3F5FBF'> 4.2.1 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>声明</span><span lang=EN-US
style='color:#3F5FBF'>Socket</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>对象</span><span lang=EN-US style='color:#3F5FBF'> 4.2.2 </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>在构造函数中传入</span><span
lang=EN-US style='color:#3F5FBF'>socket</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>对象并保存类中</span><span lang=EN-US style='color:#3F5FBF'> 4.2.3</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>重写</span><span lang=EN-US
style='color:#3F5FBF'>run</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>方法</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> ClientHandler <b><span
style='color:#7F0055'>implements</span></b> Runnable {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>// 1,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>声明</span><span lang=EN-US
style='color:#3F7F5F'>Socket</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
Socket <span style='color:#0000C0'>socket</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>// 2,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>在构造函数中传入</span><span
lang=EN-US style='color:#3F7F5F'>socket</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>对象并保存类中</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
ClientHandler(Socket <span style='color:#6A3E3E'>socket</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>this</span></b>.<span style='color:#0000C0'>socket</span>
= <span style='color:#6A3E3E'>socket</span>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>// 3,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>重写</span><span lang=EN-US
style='color:#3F7F5F'>run</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>方法，抽取</span><span lang=EN-US style='color:#3F7F5F'>start</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#646464'>@Override</span></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>void</span></b> run() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>try</span></b> {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// ------</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取请求行的数据</span><span lang=EN-US style='color:#3F7F5F'>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpRequest
<span style='color:#6A3E3E'>request</span> = <b><span style='color:#7F0055'>new</span></b>
HttpRequest(<span style='color:#0000C0'>socket</span>.getInputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// </span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>浏览器和服务器尝试连接时会产生</span><u><span lang=EN-US style='color:#3F7F5F'>uri</span></u><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>为空的现象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>if</span></b> (<span style='color:#6A3E3E'>request</span>.getUri()
!= <b><span style='color:#7F0055'>null</span></b> &amp;&amp; <span
style='color:#6A3E3E'>request</span>.getUri().length() &gt; 0) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
<span style='color:#6A3E3E'>file</span> = <b><span style='color:#7F0055'>new</span></b>
File(<span style='color:#2A00FF'>&quot;WebContent&quot;</span> + <span
style='color:#6A3E3E'>request</span>.getUri());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
-------</span><span style='font-family:"微软雅黑",sans-serif'>抽取响应代码</span><span
lang=EN-US>------</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpResponse
<span style='color:#6A3E3E'>response</span> = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>new</span></b> HttpResponse(</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#0000C0'>socket</span>.getOutputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>给变量赋值</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>response</span>.setProtocol(<span style='color:#2A00FF'>&quot;HTTP/1.1&quot;</span>);//</span><span
style='font-family:"微软雅黑",sans-serif'>协议</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>response</span>.setStatus(200);//</span><span
style='font-family:"微软雅黑",sans-serif'>状态码</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>response</span>.setContentType(<span style='color:#2A00FF'>&quot;text/html&quot;</span>);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>response</span>.setContentLength((<b><span
style='color:#7F0055'>int</span></b>) <span style='color:#6A3E3E'>file</span>.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// </span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>真要显示的数据</span><span lang=EN-US style='color:#3F7F5F'>,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>显示网页文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// </span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取文件，读到数组里</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedInputStream
<u><span style='color:#6A3E3E'>bis</span></u> = <b><span style='color:#7F0055'>new</span></b>
BufferedInputStream(<b><span style='color:#7F0055'>new</span></b>
FileInputStream(<span style='color:#6A3E3E'>file</span>));</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>byte</span></b>[] <span style='color:#6A3E3E'>b</span> = <b><span
style='color:#7F0055'>new</span></b> <b><span style='color:#7F0055'>byte</span></b>[(<b><span
style='color:#7F0055'>int</span></b>) <span style='color:#6A3E3E'>file</span>.length()];</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>bis</span>.read(<span style='color:#6A3E3E'>b</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// </span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>写出去</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=a3><span lang=EN-US style='font-size:12.5pt'>response.getOut().</span></span><span
lang=EN-US>write(<span style='color:#6A3E3E'>b</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>// ps.write(data.getBytes());</span></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=a3><span lang=EN-US style='font-size:12.5pt'>response.getOut().</span></span><span
lang=EN-US>flush();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#0000C0'>socket</span>.close();</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <b><span
style='color:#7F0055'>catch</span></b> (</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IOException <span
style='color:#6A3E3E'>e</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>e</span>.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>代码实现</span><span lang=EN-US>V3.0 -- </span><span
style='font-family:"微软雅黑",sans-serif'>代码优化</span></h1>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>提取服务器参数</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-family:"微软雅黑",sans-serif'>提取</span><span
lang=EN-US>4</span><span style='font-family:"微软雅黑",sans-serif'>个参数到配置文件中，</span><span
lang=EN-US>config/server.xml</span><span style='font-family:"微软雅黑",sans-serif'>中</span><span
lang=EN-US>.</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>Xml</span><span
style='font-family:"微软雅黑",sans-serif'>是一个标记语言，由大量的标记组成的。开始标记和结束标记匹配。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>Xml</span><span
style='font-family:"微软雅黑",sans-serif'>是可拓展性的标记语言，支持自定义内容。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-family:"微软雅黑",sans-serif'>每个标记都可以存在属性，属性的名字和属性的值要用</span><span
lang=EN-US>=</span><span style='font-family:"微软雅黑",sans-serif'>连接。属性的值用双引号或者单引号给引起来。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>创建</span><span
lang=EN-US>server.xml</span><span style='font-family:"微软雅黑",sans-serif'>文件</span></h3>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US><img width=288
height=339 id="图片 3" src="webserver02.files/image003.png"></span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.1.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>准备数据</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US style='color:teal'>&lt;?</span><span lang=EN-US
style='color:#3F7F7F'>xml</span><span lang=EN-US> version<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;1.0&quot;</span></i>
encoding<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;UTF-8&quot;</span></i><span
style='color:teal'>?&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>connect</span><span
lang=EN-US> port<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;8080&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pool<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;100&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; webroot<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;WebContent&quot;</span></i></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protocol<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;HTTP/1.1&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>connect</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.1.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>创建</span><span
lang=EN-US>ServerContext</span><span style='font-family:"微软雅黑",sans-serif'>类，读取</span><span
lang=EN-US>xml</span><span style='font-family:"微软雅黑",sans-serif'>的数据</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.common;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.io.SAXReader;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来读取</span><span
lang=EN-US style='color:#3F5FBF'>server.xml</span><span style='font-family:
"微软雅黑",sans-serif;color:#3F5FBF'>的数据</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>声明</span><span lang=EN-US
style='color:#3F5FBF'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>个参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>2,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> ServerContext {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//1,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>声明</span><span lang=EN-US
style='color:#3F7F5F'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>个参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的端口号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>port</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>线程数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>pool</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的资源根目录</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>webRoot</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>协议名版本号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>protocol</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//2,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>static</span></b>{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>init</i>();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>读取</span><span lang=EN-US
style='color:#3F7F5F'>server.xml</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>中的数据，使用</span><span lang=EN-US style='color:#3F7F5F'>dom4j</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>技术</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>void</span></b>
init() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b>&nbsp;&nbsp; </b>try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SAXReader&nbsp;
reader = new SAXReader();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>读取</span><span lang=EN-US>xml</span><span
style='font-family:"微软雅黑",sans-serif'>文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Document
doc = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reader.read(&quot;config/server.xml&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>获取根节点</span><span lang=EN-US>server</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
server = doc.getRootElement();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>读取子节点</span><span lang=EN-US>service</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
service = server.element(&quot;service&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a style='text-indent:60.0pt;background:#D9D9D9'><span lang=EN-US>//</span><span
style='font-family:"微软雅黑",sans-serif'>读取子节点</span><span lang=EN-US>connect</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
connect = service.element(&quot;connect&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>获取</span><span lang=EN-US>connect</span><span
style='font-family:"微软雅黑",sans-serif'>元素的属性</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; port=Integer.valueOf(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connect.attributeValue(&quot;port&quot;));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pool=Integer.valueOf(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connect.attributeValue(&quot;pool&quot;));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; webRoot=connect.attributeValue(&quot;webroot&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protocol=connect.attributeValue(&quot;protocol&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp; } catch
(DocumentException e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.1.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US>package cn.tedu.core;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import java.io.BufferedInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.File;</span></p>

<p class=a><span lang=EN-US>import java.io.FileInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.IOException;</span></p>

<p class=a><span lang=EN-US>import java.io.OutputStream;</span></p>

<p class=a><span lang=EN-US>import java.net.Socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.common.ServerContext;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.http.HttpRequest;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.http.HttpResponse;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>/**</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>这个类用来作为线程类，抽取</span><span
lang=EN-US>start</span><span style='font-family:"微软雅黑",sans-serif'>方法的代码</span><span
lang=EN-US> 4.2.1 </span><span style='font-family:"微软雅黑",sans-serif'>声明</span><span
lang=EN-US>Socket</span><span style='font-family:"微软雅黑",sans-serif'>对象</span><span
lang=EN-US> 4.2.2 </span><span style='font-family:"微软雅黑",sans-serif'>在构造函数中传入</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span><span
lang=EN-US> 4.2.3</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>重写</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;*/</span></p>

<p class=a><span lang=EN-US>public class ClientHandler implements Runnable {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 1,</span><span style='font-family:
"微软雅黑",sans-serif'>声明</span><span lang=EN-US>Socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; private Socket socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 2,</span><span style='font-family:
"微软雅黑",sans-serif'>在构造函数中传入</span><span lang=EN-US>socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public ClientHandler(Socket socket) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.socket =
socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 3,</span><span style='font-family:
"微软雅黑",sans-serif'>重写</span><span lang=EN-US>run</span><span style='font-family:
"微软雅黑",sans-serif'>方法，抽取</span><span lang=EN-US>start</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; @Override</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public void run() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
------</span><span style='font-family:"微软雅黑",sans-serif'>获取请求行的数据</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpRequest
request = new HttpRequest(socket.getInputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>浏览器和服务器尝试连接时会产生</span><span
lang=EN-US>uri</span><span style='font-family:"微软雅黑",sans-serif'>为空的现象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(request.getUri() != null &amp;&amp; request.getUri().length() &gt; 0) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
file = new File(</span><span class=a3><span lang=EN-US style='font-size:12.5pt'>ServerContext.webRoot</span></span><span
lang=EN-US> + request.getUri());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
-------</span><span style='font-family:"微软雅黑",sans-serif'>抽取响应代码</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpResponse
response = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new
HttpResponse(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.getOutputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>给变量赋值</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setProtocol(</span><span
class=a3><span lang=EN-US style='font-size:12.5pt'>ServerContext.protocol</span></span><span
lang=EN-US>);//</span><span style='font-family:"微软雅黑",sans-serif'>协议</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setStatus(200);//</span><span
style='font-family:"微软雅黑",sans-serif'>状态码</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setContentType(&quot;text/html&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setContentLength((int)
file.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>真要显示的数据</span><span
lang=EN-US>,</span><span style='font-family:"微软雅黑",sans-serif'>显示网页文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>读取文件，读到数组里</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedInputStream
bis = new BufferedInputStream(new FileInputStream(file));</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[]
b = new byte[(int) file.length()];</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bis.read(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>写出去</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputStream
out1 = response.getOut();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out1.write(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
ps.write(data.getBytes());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.getOut().flush();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.close();</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IOException e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<h3 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2.1.5<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>改造</span><span lang=EN-US>WebServer</span><span
style='font-family:"微软雅黑",sans-serif'>类</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US>package cn.tedu.core;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import java.io.IOException;</span></p>

<p class=a><span lang=EN-US>import java.io.OutputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.PrintStream;</span></p>

<p class=a><span lang=EN-US>import java.net.ServerSocket;</span></p>

<p class=a><span lang=EN-US>import java.net.Socket;</span></p>

<p class=a><span lang=EN-US>import java.util.concurrent.ExecutorService;</span></p>

<p class=a><span lang=EN-US>import java.util.concurrent.Executors;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.common.ServerContext;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>/**</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>这个类用来代表服务器端的程序</span></p>

<p class=a><span lang=EN-US>4.1.1 </span><span style='font-family:"微软雅黑",sans-serif'>声明</span><span
lang=EN-US>ServerSocket</span><span style='font-family:"微软雅黑",sans-serif'>对象</span></p>

<p class=a><span lang=EN-US>4.1.2 </span><span style='font-family:"微软雅黑",sans-serif'>在构造函数中完成</span><span
lang=EN-US>ServerSocket</span><span style='font-family:"微软雅黑",sans-serif'>对象的初始化</span></p>

<p class=a><span lang=EN-US>4.1.3 </span><span style='font-family:"微软雅黑",sans-serif'>提供</span><span
lang=EN-US>start</span><span style='font-family:"微软雅黑",sans-serif'>方法，接收客户端的请求并响应</span></p>

<p class=a><span lang=EN-US>4.1.4 </span><span style='font-family:"微软雅黑",sans-serif'>提供</span><span
lang=EN-US>main</span><span style='font-family:"微软雅黑",sans-serif'>方法，启动服务器</span></p>

<p class=a><span lang=EN-US>&nbsp;*/</span></p>

<p class=a><span lang=EN-US>public class WebServer {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //1,</span><span style='font-family:
"微软雅黑",sans-serif'>声明</span><span lang=EN-US>ServerSocket</span><span
style='font-family:"微软雅黑",sans-serif'>对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; private ServerSocket server;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //i,,,,</span><span style='font-family:
"微软雅黑",sans-serif'>声明线程池对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; private ExecutorService threadPool;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //2,</span><span style='font-family:
"微软雅黑",sans-serif'>在构造函数中完成</span><span lang=EN-US>ServerSocket</span><span
style='font-family:"微软雅黑",sans-serif'>对象的初始化</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public WebServer(){</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>绑定端口号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server
= new ServerSocket(</span><span class=a3><span lang=EN-US style='font-size:
12.5pt'>ServerContext.port</span></span><span lang=EN-US>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //i,,,,</span><span
style='font-family:"微软雅黑",sans-serif'>初始化线程池对象，最大线程数是</span><span lang=EN-US>100</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threadPool
= </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Executors.newFixedThreadPool(</span><span
class=a3><span lang=EN-US style='font-size:12.5pt'>ServerContext.pool</span></span><span
lang=EN-US>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;start
server...&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (IOException
e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //3,</span><span style='font-family:
"微软雅黑",sans-serif'>提供</span><span lang=EN-US>start</span><span
style='font-family:"微软雅黑",sans-serif'>方法，接收客户端的请求并响应</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public void start(){</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(true){</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>持续接收客户端请求</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Socket
socket = server.accept();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //i,,,,</span><span
style='font-family:"微软雅黑",sans-serif'>用线程池来执行线程类</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; threadPool.execute(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new
ClientHandler(socket));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>向浏览器输出一句话</span><span lang=EN-US>hello</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*</span><span
style='font-family:"微软雅黑",sans-serif'>组织的数据格式不符合</span><span lang=EN-US>http</span><span
style='font-family:"微软雅黑",sans-serif'>协议</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*
OutputStream out = socket.getOutputStream();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out.write(&quot;hello&quot;.getBytes());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out.flush();*/</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*//</span><span
style='font-family:"微软雅黑",sans-serif'>改造输出数据的格式</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintStream
ps = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new
PrintStream(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.getOutputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>拼接状态行</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;HTTP/1.1
200 OK&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>拼接响应头，响应内容：网页类型</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Type:text/html&quot;);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>拼接响应头，响应内容的长度</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
data = &quot;hello server~&quot;;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println(&quot;Content-Length:&quot;+data.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>拼接空白行</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.println();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>拼接响应实体内容（真正要显示的内容）</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.write(data.getBytes());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ps.flush();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.close();*/</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (IOException
e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; //4,</span><span style='font-family:
"微软雅黑",sans-serif'>提供</span><span lang=EN-US>main</span><span style='font-family:
"微软雅黑",sans-serif'>方法，启动服务器</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public static void main(String[] args)
{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebServer server =
new WebServer();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>接收客户端请求，并响应</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.start();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>配置</span><span lang=EN-US>404</span><span
style='font-family:"微软雅黑",sans-serif'>页面</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-family:"微软雅黑",sans-serif'>当网站出现了异常时，应该做统一的错误处理页面，不要把异常直接暴露给客户端。</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>创建</span><span
lang=EN-US>404.html</span><span style='font-family:"微软雅黑",sans-serif'>页面</span></h3>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US><img width=360
height=451 id="图片 4" src="webserver02.files/image004.png"></span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US><img width=576
height=266 id="图片 5" src="webserver02.files/image005.jpg"></span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>server.xml</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US style='color:teal'>&lt;?</span><span lang=EN-US
style='color:#3F7F7F'>xml</span><span lang=EN-US> version<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;1.0&quot;</span></i>
encoding<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;UTF-8&quot;</span></i><span
style='color:teal'>?&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>connect</span><span
lang=EN-US> port<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;8080&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pool<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;100&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; webroot<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;WebContent&quot;</span></i></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protocol<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;HTTP/1.1&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>connect</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>&lt;!-- </span><span style='font-family:"微软雅黑",sans-serif'>配置</span><span
lang=EN-US>404</span><span style='font-family:"微软雅黑",sans-serif'>页面</span><span
lang=EN-US> --&gt;</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>page404</span><span
lang=EN-US style='color:teal'>&gt;</span><span lang=EN-US style='color:black'>404.<u>html</u></span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>page404</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>ServerContext</span><span style='font-family:"微软雅黑",sans-serif'>类</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.common;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.Document;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.DocumentException;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.Element;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.io.SAXReader;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来读取</span><span
lang=EN-US style='color:#3F5FBF'>server.xml</span><span style='font-family:
"微软雅黑",sans-serif;color:#3F5FBF'>的数据</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>声明</span><span lang=EN-US
style='color:#3F5FBF'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>个参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>2,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> ServerContext {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//1,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>声明</span><span lang=EN-US
style='color:#3F7F5F'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>个参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的端口号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>port</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>线程数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>pool</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的资源根目录</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>webRoot</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>协议名版本号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>protocol</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //a</span><span style='font-family:
"微软雅黑",sans-serif'>，，，，，声明</span><span lang=EN-US>404</span><span
style='font-family:"微软雅黑",sans-serif'>页面</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>notFoundPage</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//2,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>static</span></b>{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>init</i>();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>读取</span><span lang=EN-US
style='color:#3F7F5F'>server.xml</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>中的数据，使用</span><span lang=EN-US style='color:#3F7F5F'>dom4j</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>技术</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>void</span></b>
init() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>try</span></b> {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SAXReader&nbsp;
<span style='color:#6A3E3E'>reader</span> = <b><span style='color:#7F0055'>new</span></b>
SAXReader();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取</span><u><span lang=EN-US style='color:#3F7F5F'>xml</span></u><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Document
<span style='color:#6A3E3E'>doc</span> = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>reader</span>.read(<span style='color:#2A00FF'>&quot;config/server.xml&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取根节点</span><span lang=EN-US style='color:#3F7F5F'>server</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>server</span> = <span style='color:#6A3E3E'>doc</span>.getRootElement();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取子节点</span><span lang=EN-US style='color:#3F7F5F'>service</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>service</span> = <span style='color:#6A3E3E'>server</span>.element(<span
style='color:#2A00FF'>&quot;service&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取子节点</span><span lang=EN-US style='color:#3F7F5F'>connect</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>connect</span> = <span style='color:#6A3E3E'>service</span>.element(<span
style='color:#2A00FF'>&quot;connect&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取</span><span lang=EN-US style='color:#3F7F5F'>connect</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>元素的属性给成员变量赋值</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//attributeValue</span></span><span style='font-family:
"微软雅黑",sans-serif;color:#3F7F5F'>传入的值是：</span><u><span lang=EN-US
style='color:#3F7F5F'>xml</span></u><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>中属性的名字</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>port</span></i>=Integer.<i>valueOf</i>(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>connect</span>.attributeValue(<span style='color:#2A00FF'>&quot;port&quot;</span>));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>pool</span></i>=Integer.<i>valueOf</i>(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>connect</span>.attributeValue(<span style='color:#2A00FF'>&quot;pool&quot;</span>));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <i><span
style='color:#0000C0'>webRoot</span></i>=<span style='color:#6A3E3E'>connect</span>.attributeValue(<span
style='color:#2A00FF'>&quot;webroot&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>protocol</span></i>=<span style='color:#6A3E3E'>connect</span>.attributeValue(<span
style='color:#2A00FF'>&quot;protocol&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //a,,,,</span><span
style='font-family:"微软雅黑",sans-serif'>获取</span><span lang=EN-US>page404</span><span
style='font-family:"微软雅黑",sans-serif'>的值，</span><span lang=EN-US>notFoundPage</span><span
style='font-family:"微软雅黑",sans-serif'>赋值</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>notFoundPage</span></i> = <span style='color:#6A3E3E'>service</span>.elementText(<span
style='color:#2A00FF'>&quot;page404&quot;</span>); </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <b><span
style='color:#7F0055'>catch</span></b> (DocumentException <span
style='color:#6A3E3E'>e</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>e</span>.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US>// 3,</span><span style='font-family:"微软雅黑",sans-serif'>重写</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法，抽取</span><span
lang=EN-US>start</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:#646464'>@Override</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>public</span></b><span lang=EN-US
style='color:black'> </span><b><span lang=EN-US style='color:#7F0055'>void</span></b><span
lang=EN-US style='color:black'> run() {</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>try</span></b><span lang=EN-US
style='color:black'> {</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// ------</span><span style='font-family:"微软雅黑",sans-serif'>获取请求行的数据</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpRequest
</span><span lang=EN-US style='color:#6A3E3E'>request</span><span lang=EN-US
style='color:black'> = </span><b><span lang=EN-US style='color:#7F0055'>new</span></b><span
lang=EN-US style='color:black'> HttpRequest(</span><span lang=EN-US
style='color:#0000C0'>socket</span><span lang=EN-US style='color:black'>.getInputStream());</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// </span><span style='font-family:"微软雅黑",sans-serif'>浏览器和服务器尝试连接时会产生</span><u><span
lang=EN-US>uri</span></u><span style='font-family:"微软雅黑",sans-serif'>为空的现象</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>if</span></b><span lang=EN-US
style='color:black'> (</span><span lang=EN-US style='color:#6A3E3E'>request</span><span
lang=EN-US style='color:black'>.getUri() != </span><b><span lang=EN-US
style='color:#7F0055'>null</span></b><span lang=EN-US style='color:black'>
&amp;&amp; </span><span lang=EN-US style='color:#6A3E3E'>request</span><span
lang=EN-US style='color:black'>.getUri().length() &gt; 0) {</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// -------</span><span style='font-family:"微软雅黑",sans-serif'>抽取响应代码</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpResponse
</span><span lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'> = </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>new</span></b><span lang=EN-US
style='color:black'> HttpResponse(</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#0000C0'>socket</span><span lang=EN-US
style='color:black'>.getOutputStream());</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
</span><span lang=EN-US style='color:#6A3E3E'>file</span><span lang=EN-US
style='color:black'> = </span><b><span lang=EN-US style='color:#7F0055'>new</span></b><span
lang=EN-US style='color:black'> File(ServerContext.</span><i><span lang=EN-US
style='color:#0000C0'>webRoot</span></i><span lang=EN-US style='color:black'> +
</span><span lang=EN-US style='color:#6A3E3E'>request</span><span lang=EN-US
style='color:black'>.getUri());</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>//a</span><span style='font-family:"微软雅黑",sans-serif'>，，，配置</span><span
lang=EN-US>404</span><span style='font-family:"微软雅黑",sans-serif'>页面</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>if</span></b><span lang=EN-US
style='color:black'>(!</span><span lang=EN-US style='color:#6A3E3E'>file</span><span
lang=EN-US style='color:black'>.exists()){</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>//</span><span style='font-family:"微软雅黑",sans-serif'>如果文件不存在跳转至</span><span
lang=EN-US>404</span><span style='font-family:"微软雅黑",sans-serif'>页面</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>file</span><span lang=EN-US style='color:black'>
= </span><b><span lang=EN-US style='color:#7F0055'>new</span></b><span
lang=EN-US style='color:black'> File(ServerContext.</span><i><span lang=EN-US
style='color:#0000C0'>webRoot</span></i><span lang=EN-US style='color:black'> +</span><span
lang=EN-US style='color:#2A00FF'>&quot;/&quot;</span><span lang=EN-US
style='color:black'>+ServerContext.</span><i><span lang=EN-US style='color:
#0000C0'>notFoundPage</span></i><span lang=EN-US style='color:black'>);</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>//</span><span style='font-family:"微软雅黑",sans-serif'>修改状态码</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.setStatus(404);</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><b><span
lang=EN-US style='color:#7F0055'>else</span></b><span lang=EN-US
style='color:black'>{</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.setStatus(200);</span><span lang=EN-US>//</span><span
style='font-family:"微软雅黑",sans-serif'>状态码</span></p>

<p class=a0><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>//</span><span style='font-family:"微软雅黑",sans-serif'>给变量赋值</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.setProtocol(ServerContext.</span><i><span lang=EN-US
style='color:#0000C0'>protocol</span></i><span lang=EN-US style='color:black'>);</span><span
lang=EN-US>//</span><span style='font-family:"微软雅黑",sans-serif'>协议</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.setContentType(</span><span lang=EN-US style='color:#2A00FF'>&quot;text/html&quot;</span><span
lang=EN-US style='color:black'>);</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.setContentLength((</span><b><span lang=EN-US
style='color:#7F0055'>int</span></b><span lang=EN-US style='color:black'>) </span><span
lang=EN-US style='color:#6A3E3E'>file</span><span lang=EN-US style='color:black'>.length());</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// </span><span style='font-family:"微软雅黑",sans-serif'>真要显示的数据</span><span
lang=EN-US>,</span><span style='font-family:"微软雅黑",sans-serif'>显示网页文件</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// </span><span style='font-family:"微软雅黑",sans-serif'>读取文件，读到数组里</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedInputStream
</span><u><span lang=EN-US style='color:#6A3E3E'>bis</span></u><span
lang=EN-US style='color:black'> = </span><b><span lang=EN-US style='color:#7F0055'>new</span></b><span
lang=EN-US style='color:black'> BufferedInputStream(</span><b><span lang=EN-US
style='color:#7F0055'>new</span></b><span lang=EN-US style='color:black'>
FileInputStream(</span><span lang=EN-US style='color:#6A3E3E'>file</span><span
lang=EN-US style='color:black'>));</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b><span
lang=EN-US style='color:#7F0055'>byte</span></b><span lang=EN-US
style='color:black'>[] </span><span lang=EN-US style='color:#6A3E3E'>b</span><span
lang=EN-US style='color:black'> = </span><b><span lang=EN-US style='color:#7F0055'>new</span></b><span
lang=EN-US style='color:black'> </span><b><span lang=EN-US style='color:#7F0055'>byte</span></b><span
lang=EN-US style='color:black'>[(</span><b><span lang=EN-US style='color:#7F0055'>int</span></b><span
lang=EN-US style='color:black'>) </span><span lang=EN-US style='color:#6A3E3E'>file</span><span
lang=EN-US style='color:black'>.length()];</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>bis</span><span lang=EN-US style='color:black'>.read(</span><span
lang=EN-US style='color:#6A3E3E'>b</span><span lang=EN-US style='color:black'>);</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// </span><span style='font-family:"微软雅黑",sans-serif'>写出去</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputStream
</span><span lang=EN-US style='color:#6A3E3E'>out1</span><span lang=EN-US
style='color:black'> = </span><span lang=EN-US style='color:#6A3E3E'>response</span><span
lang=EN-US style='color:black'>.getOut();</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>out1</span><span lang=EN-US style='color:black'>.write(</span><span
lang=EN-US style='color:#6A3E3E'>b</span><span lang=EN-US style='color:black'>);</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>// ps.write(data.getBytes());</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>response</span><span lang=EN-US
style='color:black'>.getOut().flush();</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#0000C0'>socket</span><span lang=EN-US
style='color:black'>.close();</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
</span><b><span lang=EN-US style='color:#7F0055'>catch</span></b><span
lang=EN-US style='color:black'> (</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IOException
</span><span lang=EN-US style='color:#6A3E3E'>e</span><span lang=EN-US
style='color:black'>) {</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#6A3E3E'>e</span><span lang=EN-US style='color:black'>.printStackTrace();</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; }</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>响应多类型网页文件</span></h2>

<h3 style='text-indent:0cm'><span lang=EN-US>2.3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>server.xml</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US style='color:teal'>&lt;?</span><span lang=EN-US
style='color:#3F7F7F'>xml</span><span lang=EN-US> version<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;1.0&quot;</span></i>
encoding<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;UTF-8&quot;</span></i><span
style='color:teal'>?&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>connect</span><span
lang=EN-US> port<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;8080&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pool<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;100&quot;</span></i>
</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; webroot<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;WebContent&quot;</span></i></span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protocol<span
style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;HTTP/1.1&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>connect</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:#3F5FBF'>&lt;!-- </span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>配置</span><span lang=EN-US style='color:#3F5FBF'>404</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>页面</span><span lang=EN-US
style='color:#3F5FBF'> --&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>page404</span><span
lang=EN-US style='color:teal'>&gt;</span><span lang=EN-US style='color:black'>404.<u>html</u></span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>page404</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>service</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:#3F5FBF'>&lt;!-- </span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>响应多类型的文件</span><span style='color:#3F5FBF'> </span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>ext</u></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>：文件扩展名</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type:</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>对应</span><span lang=EN-US
style='color:#3F5FBF'>content-type</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>的值</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>ext</u></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>的值获取出来作为</span><span
lang=EN-US style='color:#3F5FBF'>map</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>的</span><span lang=EN-US style='color:#3F5FBF'>key</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>的值获取出来作为</span><span
lang=EN-US style='color:#3F5FBF'>map</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>的</span><span lang=EN-US style='color:#3F5FBF'>value</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map-&gt;{<u>html</u>,text/<u>html</u>
<u>jpg</u>,image/<u>jpeg</u>... }</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;&nbsp; --&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>type-mappings</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>type-mapping</span><span
lang=EN-US> ext<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;html&quot;</span></i>
type<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;text/html&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>type-mapping</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>type-mapping</span><span
lang=EN-US> ext<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;jpg&quot;</span></i>
type<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;image/jpeg&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>type-mapping</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>type-mapping</span><span
lang=EN-US> ext<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;avi&quot;</span></i>
type<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;vedio/avi&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>type-mapping</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;</span><span lang=EN-US style='color:#3F7F7F'>type-mapping</span><span
lang=EN-US> ext<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;css&quot;</span></i>
type<span style='color:black'>=</span><i><span style='color:#2A00FF'>&quot;text/css&quot;</span></i><span
style='color:teal'>&gt;&lt;/</span><span style='color:#3F7F7F'>type-mapping</span><span
style='color:teal'>&gt;</span></span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span><span
lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US style='color:#3F7F7F'>type-mappings</span><span
lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:black'>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US style='color:teal'>&lt;/</span><span lang=EN-US
style='color:#3F7F7F'>server</span><span lang=EN-US style='color:teal'>&gt;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.3.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>ServerContext</span><span style='font-family:"微软雅黑",sans-serif'>类读取信息</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><b><span lang=EN-US style='color:#7F0055'>package</span></b><span
lang=EN-US> cn.tedu.common;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.util.HashMap;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.util.List;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> java.util.Map;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.Document;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.DocumentException;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.Element;</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>import</span></b><span
lang=EN-US> org.dom4j.io.SAXReader;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>/**</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;* </span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>这个类用来读取</span><span
lang=EN-US style='color:#3F5FBF'>server.xml</span><span style='font-family:
"微软雅黑",sans-serif;color:#3F5FBF'>的数据</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>1,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>声明</span><span lang=EN-US
style='color:#3F5FBF'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F5FBF'>个参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>2,</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F5FBF'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US style='color:#3F5FBF'>&nbsp;*/</span></p>

<p class=a><b><span lang=EN-US style='color:#7F0055'>public</span></b><span
lang=EN-US> <b><span style='color:#7F0055'>class</span></b> ServerContext {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//1,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>声明</span><span lang=EN-US
style='color:#3F7F5F'>4</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>个参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的端口号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>port</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>线程数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>int</span></b>
<i><span style='color:#0000C0'>pool</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>服务器的资源根目录</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>webRoot</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>协议名版本号</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>protocol</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//a</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>，，，，，声明</span><span
lang=EN-US style='color:#3F7F5F'>404</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>页面</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> String <i><span
style='color:#0000C0'>notFoundPage</span></i>;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //i,,,,,,,,,</span><span
style='font-family:"微软雅黑",sans-serif'>封装</span><span lang=EN-US>contenttype</span><span
style='font-family:"微软雅黑",sans-serif'>的</span><span lang=EN-US>map</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; /*</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; &nbsp;* ext</span><span
style='font-family:"微软雅黑",sans-serif'>的值获取出来作为</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>的</span><span lang=EN-US>key</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; &nbsp; type</span><span
style='font-family:"微软雅黑",sans-serif'>的值获取出来作为</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>的</span><span lang=EN-US>value</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; &nbsp; map-&gt;{html,text/html
jpg,image/jpeg... }</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; */</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>public</span></b>
<b><span style='color:#7F0055'>static</span></b> Map&lt;String,String&gt; <i><span
style='color:#0000C0'>map</span></i> =</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>new</span></b> HashMap&lt;String,String&gt;();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//2,</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>在静态代码块中初始化参数</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>static</span></b>{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>init</i>();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <span style='color:#3F7F5F'>//</span></span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>读取</span><span lang=EN-US
style='color:#3F7F5F'>server.xml</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>中的数据，使用</span><span lang=EN-US style='color:#3F7F5F'>dom4j</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>技术</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; <b><span style='color:#7F0055'>private</span></b>
<b><span style='color:#7F0055'>static</span></b> <b><span style='color:#7F0055'>void</span></b>
init() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>try</span></b> {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SAXReader&nbsp;
<span style='color:#6A3E3E'>reader</span> = <b><span style='color:#7F0055'>new</span></b>
SAXReader();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取</span><span lang=EN-US style='color:#3F7F5F'>xml</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Document
<span style='color:#6A3E3E'>doc</span> = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>reader</span>.read(<span style='color:#2A00FF'>&quot;config/server.xml&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取根节点</span><span lang=EN-US style='color:#3F7F5F'>server</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>server</span> = <span style='color:#6A3E3E'>doc</span>.getRootElement();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取子节点</span><span lang=EN-US style='color:#3F7F5F'>service</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>service</span> = <span style='color:#6A3E3E'>server</span>.element(<span
style='color:#2A00FF'>&quot;service&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>读取子节点</span><span lang=EN-US style='color:#3F7F5F'>connect</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element
<span style='color:#6A3E3E'>connect</span> = <span style='color:#6A3E3E'>service</span>.element(<span
style='color:#2A00FF'>&quot;connect&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取</span><span lang=EN-US style='color:#3F7F5F'>connect</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>元素的属性给成员变量赋值</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//attributeValue</span></span><span style='font-family:
"微软雅黑",sans-serif;color:#3F7F5F'>传入的值是：</span><span lang=EN-US
style='color:#3F7F5F'>xml</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>中属性的名字</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>port</span></i>=Integer.<i>valueOf</i>(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>connect</span>.attributeValue(<span style='color:#2A00FF'>&quot;port&quot;</span>));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>pool</span></i>=Integer.<i>valueOf</i>(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>connect</span>.attributeValue(<span style='color:#2A00FF'>&quot;pool&quot;</span>));</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>webRoot</span></i>=<span style='color:#6A3E3E'>connect</span>.attributeValue(<span
style='color:#2A00FF'>&quot;webroot&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>protocol</span></i>=<span style='color:#6A3E3E'>connect</span>.attributeValue(<span
style='color:#2A00FF'>&quot;protocol&quot;</span>);</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#3F7F5F'>//a,,,,</span></span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>获取</span><span lang=EN-US style='color:#3F7F5F'>page404</span><span
style='font-family:"微软雅黑",sans-serif;color:#3F7F5F'>的值，</span><span lang=EN-US
style='color:#3F7F5F'>notFoundPage</span><span style='font-family:"微软雅黑",sans-serif;
color:#3F7F5F'>赋值</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>notFoundPage</span></i> = <span style='color:#6A3E3E'>service</span>.elementText(<span
style='color:#2A00FF'>&quot;page404&quot;</span>); </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //i,,,,,</span><span
style='font-family:"微软雅黑",sans-serif'>初始化</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>的值</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;Element&gt;
<span style='color:#6A3E3E'>list</span> = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>server</span>.element(<span style='color:#2A00FF'>&quot;type-mappings&quot;</span>)</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .elements();</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>遍历</span><span lang=EN-US>list</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><span
style='color:#7F0055'>for</span></b> (Element <span style='color:#6A3E3E'>element</span>
: <span style='color:#6A3E3E'>list</span>) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;ext</span><span
style='font-family:"微软雅黑",sans-serif'>的值获取出来作为</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>的</span><span lang=EN-US>key</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
type</span><span style='font-family:"微软雅黑",sans-serif'>的值获取出来作为</span><span
lang=EN-US>map</span><span style='font-family:"微软雅黑",sans-serif'>的</span><span
lang=EN-US>value</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
map-&gt;{html,text/html jpg,image/jpeg... }</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */ </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
<span style='color:#6A3E3E'>key</span> = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>element</span>.attributeValue(<span style='color:#2A00FF'>&quot;ext&quot;</span>);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
<span style='color:#6A3E3E'>value</span> = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>element</span>.attributeValue(<span style='color:#2A00FF'>&quot;type&quot;</span>);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>存入</span><span lang=EN-US>map</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i><span
style='color:#0000C0'>map</span></i>.put(<span style='color:#6A3E3E'>key</span>,
<span style='color:#6A3E3E'>value</span>);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <b><span
style='color:#7F0055'>catch</span></b> (DocumentException <span
style='color:#6A3E3E'>e</span>) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:#6A3E3E'>e</span>.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h3 style='text-indent:0cm'><span lang=EN-US>2.3.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑",sans-serif'>改造</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></h3>

<div style='border:solid windowtext 1.0pt;padding:12.0pt 12.0pt 12.0pt 12.0pt;
background:#D9D9D9'>

<p class=a><span lang=EN-US>package cn.tedu.core;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import java.io.BufferedInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.File;</span></p>

<p class=a><span lang=EN-US>import java.io.FileInputStream;</span></p>

<p class=a><span lang=EN-US>import java.io.IOException;</span></p>

<p class=a><span lang=EN-US>import java.io.OutputStream;</span></p>

<p class=a><span lang=EN-US>import java.net.Socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.common.ServerContext;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.http.HttpRequest;</span></p>

<p class=a><span lang=EN-US>import cn.tedu.http.HttpResponse;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>/**</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>这个类用来作为线程类，抽取</span><span
lang=EN-US>start</span><span style='font-family:"微软雅黑",sans-serif'>方法的代码</span><span
lang=EN-US> 4.2.1 </span><span style='font-family:"微软雅黑",sans-serif'>声明</span><span
lang=EN-US>Socket</span><span style='font-family:"微软雅黑",sans-serif'>对象</span><span
lang=EN-US> 4.2.2 </span><span style='font-family:"微软雅黑",sans-serif'>在构造函数中传入</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span><span
lang=EN-US> 4.2.3</span></p>

<p class=a><span lang=EN-US>&nbsp;* </span><span style='font-family:"微软雅黑",sans-serif'>重写</span><span
lang=EN-US>run</span><span style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;*/</span></p>

<p class=a><span lang=EN-US>public class ClientHandler implements Runnable {</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 1,</span><span style='font-family:
"微软雅黑",sans-serif'>声明</span><span lang=EN-US>Socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; private Socket socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 2,</span><span style='font-family:
"微软雅黑",sans-serif'>在构造函数中传入</span><span lang=EN-US>socket</span><span
style='font-family:"微软雅黑",sans-serif'>对象并保存类中</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public ClientHandler(Socket socket) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.socket =
socket;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; // 3,</span><span style='font-family:
"微软雅黑",sans-serif'>重写</span><span lang=EN-US>run</span><span style='font-family:
"微软雅黑",sans-serif'>方法，抽取</span><span lang=EN-US>start</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; @Override</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; public void run() {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
------</span><span style='font-family:"微软雅黑",sans-serif'>获取请求行的数据</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpRequest
request = new HttpRequest(socket.getInputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>浏览器和服务器尝试连接时会产生</span><span
lang=EN-US>uri</span><span style='font-family:"微软雅黑",sans-serif'>为空的现象</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if
(request.getUri() != null &amp;&amp; request.getUri().length() &gt; 0) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
-------</span><span style='font-family:"微软雅黑",sans-serif'>抽取响应代码</span><span
lang=EN-US>------</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpResponse
response = </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new
HttpResponse(</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.getOutputStream());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
file = new File(ServerContext.webRoot + request.getUri());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //a</span><span
style='font-family:"微软雅黑",sans-serif'>，，，配置</span><span lang=EN-US>404</span><span
style='font-family:"微软雅黑",sans-serif'>页面</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(!file.exists()){</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>如果文件不存在跳转至</span><span lang=EN-US>404</span><span
style='font-family:"微软雅黑",sans-serif'>页面</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; file
= new File(ServerContext.webRoot +&quot;/&quot;+ServerContext.notFoundPage);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>修改状态码</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setStatus(404);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setStatus(200);//</span><span
style='font-family:"微软雅黑",sans-serif'>状态码</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>给变量赋值</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setProtocol(ServerContext.protocol);//</span><span
style='font-family:"微软雅黑",sans-serif'>协议</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setContentType(</span><span
class=a3><span lang=EN-US style='font-size:12.5pt'>getContentTypeByFile(file)</span></span><span
lang=EN-US>);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.setContentLength((int)
file.length());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>真要显示的数据</span><span
lang=EN-US>,</span><span style='font-family:"微软雅黑",sans-serif'>显示网页文件</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>读取文件，读到数组里</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedInputStream
bis = new BufferedInputStream(new FileInputStream(file));</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[]
b = new byte[(int) file.length()];</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bis.read(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span><span style='font-family:"微软雅黑",sans-serif'>写出去</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutputStream
out1 = response.getOut();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out1.write(b);</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
ps.write(data.getBytes());</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.getOut().flush();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; socket.close();</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IOException e) {</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; //</span><span style='font-family:
"微软雅黑",sans-serif'>根据文件的后缀名，作为</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>的</span><span lang=EN-US>key</span><span
style='font-family:"微软雅黑",sans-serif'>去找对应的</span><span lang=EN-US>value</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; private String getContentTypeByFile(</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File
file) {</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>获取文件名字</span> </p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //fileName=i.n.de.x.html</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String fileName = file.getName();</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>获取文件的后缀名</span><span lang=EN-US>(</span><span
style='font-family:"微软雅黑",sans-serif'>获取到</span><span lang=EN-US>.</span><span
style='font-family:"微软雅黑",sans-serif'>的位置加</span><span lang=EN-US>1</span><span
style='font-family:"微软雅黑",sans-serif'>得到</span><span lang=EN-US>html</span><span
style='font-family:"微软雅黑",sans-serif'>后缀</span><span lang=EN-US>)&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String key = </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileName.substring(</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileName.lastIndexOf(&quot;.&quot;)+1);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:"微软雅黑",sans-serif'>去</span><span lang=EN-US>map</span><span
style='font-family:"微软雅黑",sans-serif'>中找</span><span lang=EN-US>value</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
val=ServerContext.map.get(key);</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return val;</span></p>

<p class=a0><span lang=EN-US>&nbsp;&nbsp; }</span></p>

<p class=a><span lang=EN-US>&nbsp;</span></p>

<p class=a><span lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>2.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>动态响应描述</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h1 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>代码实现</span><span lang=EN-US>V4.0 -- </span><span
style='font-family:"微软雅黑",sans-serif'>实现注册或登录</span></h1>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>3.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>创建页面</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>3.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>改造</span><span lang=EN-US>run</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></h2>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>3.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>修改</span><span lang=EN-US>HttpRequest</span><span
style='font-family:"微软雅黑",sans-serif'>类，提供</span><span lang=EN-US>getParam</span><span
style='font-family:"微软雅黑",sans-serif'>方法</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<h2 style='margin-left:0cm;text-indent:0cm'><span lang=EN-US>3.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑",sans-serif'>完成注册</span></h2>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
